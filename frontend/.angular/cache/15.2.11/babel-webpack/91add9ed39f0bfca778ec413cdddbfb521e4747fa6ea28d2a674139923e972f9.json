{"ast":null,"code":"import { tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(http) {\n      this.http = http;\n      this.apiUrl = 'http://localhost:3000/auth';\n      this.currentUser = null;\n    }\n    register(user) {\n      return this.http.post(`${this.apiUrl}/register`, user).pipe(tap(response => {\n        // Store the token if it's returned from the backend\n        if (response.token) {\n          localStorage.setItem('token', response.token);\n          this.currentUser = response.user;\n        }\n      }));\n    }\n    login(user) {\n      return this.http.post(`${this.apiUrl}/login`, user).pipe(tap(response => {\n        // Store the token if it's returned from the backend\n        if (response.token) {\n          localStorage.setItem('token', response.token);\n          this.currentUser = response.user;\n        }\n      }));\n    }\n    logout() {\n      localStorage.removeItem('token');\n      this.currentUser = null;\n    }\n    isLoggedIn() {\n      return !!localStorage.getItem('token');\n    }\n    getCurrentUser() {\n      return this.currentUser;\n    }\n  }\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  UserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}