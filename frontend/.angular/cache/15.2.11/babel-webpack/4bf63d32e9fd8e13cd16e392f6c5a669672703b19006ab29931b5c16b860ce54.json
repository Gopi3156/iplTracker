{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/admin.service\";\nimport * as i2 from \"@angular/material/snack-bar\";\nimport * as i3 from \"@angular/material/table\";\nimport * as i4 from \"@angular/material/slide-toggle\";\nimport * as i5 from \"@angular/common\";\nfunction AdminComponent_th_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 10);\n    i0.ɵɵtext(1, \"Username\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminComponent_td_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r8 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(user_r8.username);\n  }\n}\nfunction AdminComponent_th_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 10);\n    i0.ɵɵtext(1, \"Admin Status\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminComponent_td_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 11)(1, \"mat-slide-toggle\", 12);\n    i0.ɵɵlistener(\"change\", function AdminComponent_td_10_Template_mat_slide_toggle_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const user_r9 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.toggleAdminStatus(user_r9));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const user_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"checked\", user_r9.isAdmin);\n  }\n}\nfunction AdminComponent_th_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 10);\n    i0.ɵɵtext(1, \"Created At\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AdminComponent_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const user_r12 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 1, user_r12.createdAt));\n  }\n}\nfunction AdminComponent_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 13);\n  }\n}\nfunction AdminComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 14);\n  }\n}\nexport let AdminComponent = /*#__PURE__*/(() => {\n  class AdminComponent {\n    constructor(adminService, snackBar) {\n      this.adminService = adminService;\n      this.snackBar = snackBar;\n      this.users = [];\n      this.displayedColumns = ['username', 'isAdmin', 'createdAt'];\n    }\n    ngOnInit() {\n      this.loadUsers();\n    }\n    loadUsers() {\n      this.adminService.getUsers().subscribe({\n        next: users => {\n          this.users = users;\n        },\n        error: error => {\n          this.snackBar.open(error.error.message || 'Failed to load users', 'Close', {\n            duration: 3000\n          });\n        }\n      });\n    }\n    toggleAdminStatus(user) {\n      this.adminService.setAdminStatus(user._id, !user.isAdmin).subscribe({\n        next: updatedUser => {\n          const index = this.users.findIndex(u => u._id === updatedUser._id);\n          if (index !== -1) {\n            this.users[index] = updatedUser;\n          }\n          this.snackBar.open('Admin status updated successfully', 'Close', {\n            duration: 3000\n          });\n        },\n        error: error => {\n          this.snackBar.open(error.error.message || 'Failed to update admin status', 'Close', {\n            duration: 3000\n          });\n        }\n      });\n    }\n  }\n  AdminComponent.ɵfac = function AdminComponent_Factory(t) {\n    return new (t || AdminComponent)(i0.ɵɵdirectiveInject(i1.AdminService), i0.ɵɵdirectiveInject(i2.MatSnackBar));\n  };\n  AdminComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AdminComponent,\n    selectors: [[\"app-admin\"]],\n    decls: 16,\n    vars: 3,\n    consts: [[1, \"admin-container\"], [1, \"users-list\"], [\"mat-table\", \"\", 1, \"mat-elevation-z8\", 3, \"dataSource\"], [\"matColumnDef\", \"username\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"isAdmin\"], [\"matColumnDef\", \"createdAt\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\"], [3, \"checked\", \"change\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"]],\n    template: function AdminComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2, \"Admin Dashboard\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1)(4, \"table\", 2);\n        i0.ɵɵelementContainerStart(5, 3);\n        i0.ɵɵtemplate(6, AdminComponent_th_6_Template, 2, 0, \"th\", 4);\n        i0.ɵɵtemplate(7, AdminComponent_td_7_Template, 2, 1, \"td\", 5);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(8, 6);\n        i0.ɵɵtemplate(9, AdminComponent_th_9_Template, 2, 0, \"th\", 4);\n        i0.ɵɵtemplate(10, AdminComponent_td_10_Template, 2, 1, \"td\", 5);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(11, 7);\n        i0.ɵɵtemplate(12, AdminComponent_th_12_Template, 2, 0, \"th\", 4);\n        i0.ɵɵtemplate(13, AdminComponent_td_13_Template, 3, 3, \"td\", 5);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(14, AdminComponent_tr_14_Template, 1, 0, \"tr\", 8);\n        i0.ɵɵtemplate(15, AdminComponent_tr_15_Template, 1, 0, \"tr\", 9);\n        i0.ɵɵelementEnd()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"dataSource\", ctx.users);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n      }\n    },\n    dependencies: [i3.MatTable, i3.MatHeaderCellDef, i3.MatHeaderRowDef, i3.MatColumnDef, i3.MatCellDef, i3.MatRowDef, i3.MatHeaderCell, i3.MatCell, i3.MatHeaderRow, i3.MatRow, i4.MatSlideToggle, i5.DatePipe],\n    styles: [\".admin-container[_ngcontent-%COMP%]{padding:20px}.users-list[_ngcontent-%COMP%]{margin-top:20px}table[_ngcontent-%COMP%]{width:100%}\"]\n  });\n  return AdminComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}